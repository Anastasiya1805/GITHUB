Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash
JSON
4. Создать внешний репозиторий c названием JSON: Заходим в GITHUB.Находимся в своем профиле. Выбираем Repositories и выбираем New.В Repository name пишем название.Если нужно Discription. 
В радиобаттоне нажимаем Public.В чекбокс форме нажимаем Add a README file.Тапнем на кнопку "Create repository".
 5. Клонировать репозиторий JSON на локальный компьютер: git clone https://github.com/Anastasiya1805/JSON.git
 6. Внутри локального JSON создать файл “new.json”. cat > new.json
 7. Добавить файл под гит. git add new.json Проверим статус git status
 8. Закоммитить файл. git commit -m "new.json"
 9. Отправить файл на внешний GitHub репозиторий. git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. 
cat > new.json
 11. Отправить изменения на внешний репозиторий.git add new.json;  git status; git commit -m new.json; git push.
 12. Создать файл preferences.json  cat > preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
cat > preferences.json
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON. cat > sklls.json
 15. Отправить сразу 2 файла на внешний репозиторий.Current branch main is up to date.
 16. На веб интерфейсе создать файл bug_report.json. Выбрать Add fail; Create file.Напишем название bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ВВедем название нашего файла.Нажмем сохранить (Create file)
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. Изменим файл.Зайдем в файл bug_report.json.Справа есть карандашик "Edit this file".Нажимаем и вносим изменения.Нажимаем Commit changes
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Введем составные части Bug Report в формате json.Нажмем Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON.  git pull.

TXT
 1. Создать внешний репозиторий c названием TXT. Заходим в GITHUB.Находимся в своем профилею Выбираем Repositories и выбираем New.В Repository name пишем название.Если нужно Discription. 
В радиобаттоне нажимаем Public.В чекбокс форме нажимаем Add a README file.Тапнем на кнопку "Create repository".
 2. Клонировать репозиторий TXT на локальный компьютер.git clone https://github.com/Anastasiya1805/TXT.git
 3. Внутри локального TXT создать файл “new.txt”. touch new.txt
 4. Добавить файл под гит. git add new.txt; git status
 5. Закоммитить файл. git commit -am "new.txt"
 6. Отправить файл на внешний GitHub репозиторий. git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.vim new.txt.
Нажием i.ВВодим тескст.Жмем esc.И снизу в левом
углу вводим :wq(сохранили и вышли из режима)
 8. Отправить изменения на внешний репозиторий. git add new.txt, git status, git commit -m "new.txt", git push
 9. Создать файл preferences.txt. touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT. touch sklls.txt. vim skills.txt
 12. Сделать коммит в одну строку.git add -A && git commit -m "preferences.txt"/"skills.txt"
 13. Отправить сразу 2 файла на внешний репозиторий.git push
 14. На веб интерфейсе создать файл bug_report.txt. Выбрать Add fail; Create file.Напишем название
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.ВВедем название нашего файла.Нажмем сохранить (Create file)
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.зменим файл.Зайдем в файл bug_report.txt.Справа есть карандашик "Edit this file".
Нажимаем и вносим изменения.Нажимаем Commit changes
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе .Введем составные части Bug Report в формате txt.Нажмем Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT git pull

XML
 21. Создать внешний репозиторий c названием XML. 
 22. Клонировать репозиторий XML на локальный компьютер.git clone https://github.com/Anastasiya1805/XML-.git
 23. Внутри локального XML создать файл “new.xml”.touch new.xml
 24. Добавить файл под гит. git add new.xml git status
 25. Закоммитить файл.git commit -m new.xml
 26. Отправить файл на внешний GitHub репозиторий.git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. 
vim new.xml
 28. Отправить изменения на внешний репозиторий.git add new.xml git status git commit -m "new.xml" git push
 29. Создать файл preferences.xml touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. 
vim preferences.xml
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML touch skills.xml; vim skills.xml
 32. Сделать коммит в одну строку. git add -A && git commit -m preferences.xml/skills.xml
 33. Отправить сразу 2 файла на внешний репозиторий git push
 34. На веб интерфейсе создать файл bug_report.xml. Выбрать Add fail; Create file.Напишем название
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ВВедем название нашего файла.Нажмем сохранить (Create file)
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. Зайдем в файл bug_report.xml.Справа есть карандашик "Edit this file".Нажимаем и вносим 
изменения.Нажимаем Commit changes
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.Введем составные части Bug Report в формате xml.Нажмем Commit changes
 38. Синхронизировать внешний и локальный репозиторий XML git pull

